For this project, we implement all the basic amazon functionalities.Besides, we implement the following features.

1 Viewing order history.
In our design, use could have the ability to view their order history.
Including all the information that the user filled in at the first time she or he made that order, plus a order time that generated by our programm.
This design make it easier for the users to make further order. That is similar to the real amazon.


2 A searchable catalog plus a fill function.
In the index of our website there is a searchable catalog that could tell the user what items are currently in our stock and quantity of them.
In addition, we could initailize our database with some item in stock so the user could make an order immediately if currently the stock contains the item users want.
What's more, we divide "buy function" into two seperate functions. The first one is normal order function, When the user search the catalog, and find the things she or he wants,
the user cloud click the order button and make that order. There is another button named 'fill', which means that the user find the item he wants currently does not exist in the stock,
instead he makes an request to let our server send Apurchasemore command to put new stuff in the stock. By this design the user could know whether some stuff are in the stock or not, and it also
make our server handles easier logic. So the server could have a little bit better performance.
All of these designs will make the buying process very convenient to buy stuff. 

3 Sending email to user. 
When a user signup our website, he or she needs to fill in an email address. We send the email twice to the user. The first time when they signup an account, they will receive an email about confimation of signup. Then when they make an order or a fill request, we will send an email to the user.
We think inform a user by the format of email is more obvious it is similar to the real life. Also the email is also a more valid record of the users'order history. We test this function. In our test, the most popular type email gmail are useable in our program.


4 Changing destination of an order
Actually this feature is designed by us together with teammates writing UPS. We further optimize our protocol by adding the changed destination to in the Udeliverd command.
 When the status of the order is delivering, the user could change the destination at ups's website.
 After they change the destination, we could also get the changed destination info. And update these info in the database. So the user could view the most updated info in the future.


5 Checking the password, username, email.
Since we are using Django for the front end design, so we ensure some authentication features. for example, in our design, when a new user signup for a new account, the user name should be a unused one, and the user should double check his or her password. Also, the password could not be too common, this is for the consideration of security.
 

6 Handling the flakeness of the world
This part is a little bit tricky. If the world does not give us ack and the response we will keep sending the same response, in a while (1) loop  in each loop we first sleep 10 seconds, and send the command to world. We keep all the acks from the world in a set. And only our sequence number matched the ack and the ack already in the set, we could break the loop.

7.prime amazon member
like the real amazon, there are two kinds of membership, prime and non prime. Also in our design, user has the ability to become a prime member. In our design, there is a button, just by click the switch , user become prime. Which is similar to the real Amazon design.